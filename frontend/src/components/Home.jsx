import { useCallback, useEffect, useState, useMemo } from "react";
import { api, AI_MODEL } from "../constants";
import React from "react";
import { AppStages, BackgroundImageType, useApp } from "../context/useApp";
import { useToast } from "../context/useToast";
import "../styles/Home.css";
import $ from "jquery";
import Header from "./Header";
import { CARDS_CNT } from "../constants";

const getEduCardsGenerationPrompt = (topic) => {
  return `
    –°–æ–∑–¥–∞–π ${CARDS_CNT} –æ–±—É—á–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –Ω–∞ —Ç–µ–º—É: ${topic}.4$
    –î–∞–π –æ—Ç–≤–µ—Ç –≤–≤–∏–¥–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∫–æ–¥–∞ –≤ JSON-—Ñ–æ—Ä–º–∞—Ç–µ: –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç 3 –ø–æ–ª—è: name, svg, explanation.
    
    –ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º —Å 3 –æ–±—å—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏:
      name ‚Äî —á—ë—Ç–∫–æ–µ –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ù–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏", –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ "–§—É–Ω–∫—Ü–∏–∏ 2").
      svg ‚Äî –∫—Ä–∞—Å–∏–≤–æ–µ, –∫—Ä–∞—Å–æ—á–Ω–æ–µ –∏ –ø–æ–Ω—è—Ç–Ω–æ–µ SVG-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∏–∑—É–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å —Ç–µ–º—É. –ò—Å–ø–æ–ª—å–∑—É–π —ç–ª–µ–º–µ–Ω—Ç—ã <path>, <circle>, <line>, <text> –∏ –¥—Ä—É–≥–∏–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã. SVG –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–º –∏ –∏–º–µ—Ç—å —Å–º—ã—Å–ª, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∑–∞–¥–∞—á–µ
      explanation ‚Äî –ø–æ–¥—Ä–æ–±–Ω–æ–µ, –Ω–æ –ø—Ä–æ—Å—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—à–∞–≥–æ–≤–æ –æ–±—ä—è—Å–Ω—è–µ—Ç —Ç–µ–º—É.
    –í–∞–∂–Ω–æ:
      –†–∞—Å–ø–æ–ª–æ–∂–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (–æ—Ç –±–æ–ª–µ–µ –ª—ë–≥–∫–∏—Ö –∫ –±–æ–ª–µ–µ —Ç—Ä—É–¥–Ω—ã–º).
      –°–æ—Å—Ç–∞–≤–ª—è–π –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–º—ã.
      –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ JSON, –Ω–µ –±—ã–ª–æ –æ—à–∏–±–æ–∫
      –ò—Å–ø–æ–ª—å–∑—É–π \`\`\`json –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ —è –±—É–¥—É –≤—ã—Ä–µ–∑–∞—Ç—å json –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ json –æ–±—å–µ–∫—Ç
  `;
};

const getTestCardsGenerationPrompt = (topic, genEduCards) => {
  return `
    –°–æ–∑–¥–∞–π ${CARDS_CNT} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –Ω–∞ —Ç–µ–º—É: ${topic}.
    –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–µ–º—ã –∏ –æ–±—É—á–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–æ—Ä–∏–∏:
    ${JSON.stringify(genEduCards)}
    –î–∞–π –æ—Ç–≤–µ—Ç –≤–≤–∏–¥–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∫–æ–¥–∞ –≤ JSON-—Ñ–æ—Ä–º–∞—Ç–µ: –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç 6 –ø–æ–ª–µ–π: name, problem, solutionOptions, solutionIndex, explanation, hint.
    
    –ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º —Å 6 –æ–±—å—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏:
      name ‚Äî —á—ë—Ç–∫–æ–µ –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ù–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏", –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ "–ó–∞–¥–∞—á–∞ 3").
      problem ‚Äî —á—ë—Ç–∫–∞—è –∏ –ø–æ–Ω—è—Ç–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏.
      solutionOptions ‚Äî —Å–ø–∏—Å–æ–∫ –∏–∑ 4 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —á–∏—Å–ª–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–≥–æ –¥–µ—Å—è—Ç–∏—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "3.14", "77"), —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –≤–µ—Ä–Ω—ã–º.
      solutionIndex - (0..3) - —á–∏—Å–ª–æ, –ø–æ–∫–∞–∑—ã–≤–∞—é—Ü—è—è –∫–∞–∫–æ–π –∏–∑ –≤—ã—à–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º.
      explanation ‚Äî –ø–æ–¥—Ä–æ–±–Ω–æ–µ, –Ω–æ –ø—Ä–æ—Å—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—à–∞–≥–æ–≤–æ –æ–±—ä—è—Å–Ω—è–µ—Ç —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏.
      hint - –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É
    –í–∞–∂–Ω–æ:
      –†–∞—Å–ø–æ–ª–æ–∂–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (–æ—Ç –±–æ–ª–µ–µ –ª—ë–≥–∫–∏—Ö –∫ –±–æ–ª–µ–µ —Ç—Ä—É–¥–Ω—ã–º).
      –°–æ—Å—Ç–∞–≤–ª—è–π –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏.
      –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –∑–∞–¥–∞—á–∏ –∏–∑ –æ–±—É—á–∞—Ç–µ–ª—å–Ω–æ–π —Ç–µ–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—É—é —è –¥–∞–ª —Ç–µ–±–µ –≤—ã—à–µ.
      –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ JSON, –Ω–µ –±—ã–ª–æ –æ—à–∏–±–æ–∫
      –ò—Å–ø–æ–ª—å–∑—É–π \`\`\`json –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ —è –±—É–¥—É –≤—ã—Ä–µ–∑–∞—Ç—å json –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ json –æ–±—å–µ–∫—Ç
    `;
};

const generateEduCards = async (topic) => {
  const prompt = getEduCardsGenerationPrompt(topic);

  try {
    const response = await api.post("/chat/completions", {
      messages: [
        {
          role: "user",
          content: prompt,
        },
      ],
      model: AI_MODEL,
    });

    const message = response.data.choices[0].message.content;
    return JSON.parse(message.match(/```json\s*([\s\S]*?)\s*```/)[1]);
  } catch (error) {
    console.error("Error generating edu cards:", error);
    throw error;
  }
};

const generateTestCards = async (topic, eduCards) => {
  const prompt = getTestCardsGenerationPrompt(topic, eduCards);

  try {
    const response = await api.post("/chat/completions", {
      messages: [
        {
          role: "user",
          content: prompt,
        },
      ],
      model: AI_MODEL,
    });

    const message = response.data.choices[0].message.content;
    return JSON.parse(message.match(/```json\s*([\s\S]*?)\s*```/)[1]);
  } catch (error) {
    console.error("Error generating flashcards:", error);
    throw error;
  }
};

const sleep = (ms) => new Promise((r) => setTimeout(r, ms));

export default function Home() {
  const {
    setPrompt,
    setAppStage,
    eduCards,
    setEduCards,
    testCards,
    setTestCards,
  } = useApp();

  const { showToast } = useToast();

  const loadCards = useCallback(async (topic) => {
    try {
      let genEduCards = await generateEduCards(topic);
      let genTestCards = await generateTestCards(topic, genEduCards);
      // let genEduCards = [
      //   {
      //     name: "Circle",
      //     explanation: "This is a circle",
      //     svg: "No svg",
      //   },
      //   {
      //     name: "Penis",
      //     explanation: "This is black penis",
      //     svg: "No svg",
      //   },
      // ];
      // let genTestCards = [
      //   {
      //     name: "Circle",
      //     explanation: "This is a circle",
      //     problem: "Find the pi (2 decimal places)",
      //     solutionIndex: 0,
      //     solutionOptions: ["3.14", "3.13", "3.12", "3.11"],
      //     hint: "Remember elementary math",
      //   },
      //   {
      //     name: "Penis",
      //     explanation: "This is a penis",
      //     problem: "Find the pi (2 decimal places)",
      //     solutionIndex: 0,
      //     solutionOptions: ["3.14", "3.13", "3.12", "3.11"],
      //     hint: "You really don't know?",
      //   },
      // ];
      // await sleep(3000);

      setEduCards(genEduCards);
      setTestCards(genTestCards);
      setAppStage(AppStages.EDU);
    } catch (error) {
      showToast("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫", "failure");
      setEduCards(null);
      setTestCards(null);
      setAppStage(AppStages.HOME);
    }
  }, []);

  const topicSamples = useMemo(() => {
    return [
      "–¢–µ–æ—Ä–µ–º–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞",
      "–ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ",
      "–õ–æ–≥–∞—Ä–∏—Ñ–º—ã",
      "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è",
    ];
  }, []);

  const handleSampleChoice = useCallback((e) => {
    e.preventDefault();
    document.getElementById("prompt").value = e.target.textContent;
  }, []);

  const handlePromptSubmition = useCallback((e) => {
    e.preventDefault();
    loadCards(document.getElementById("prompt").value);
    setPrompt(document.getElementById("prompt").value);
    setAppStage(AppStages.GENERATING);
  }, []);

  const { setBackgroundImageType } = useApp();
  useEffect(() => {
    setBackgroundImageType(BackgroundImageType.BLUR);
  }, []);

  return (
    <React.Fragment>
      <main className="flex-grow flex items-center justify-center py-10 px-4">
        <div className="w-full max-w-xl text-center opacity-0 animate-fade-in-up">
          <span className="text-4xl mb-4 inline-block opacity-0 animate-fade-in-up animation-delay-600">
            üëã
          </span>
          <h1 className="text-3xl md:text-4xl font-bold mb-3 opacity-0 animate-fade-in-up animation-delay-700">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FlashMath!
          </h1>
          <p className="text-gray-200 mb-8 text-base md:text-lg opacity-0 animate-fade-in-up animation-delay-800">
            –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ, –∏ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è
            —Ç–µ–±—è!
          </p>
          <div className="relative mb-5 opacity-0 animate-fade-in-up animation-delay-900">
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É..."
              id="prompt"
              className="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-white focus:border-transparent placeholder-gray-200 text-gray-100"
            />
            <button
              type="submit"
              id="submit-prompt"
              aria-label="Submit topic"
              onClick={handlePromptSubmition}
              className="absolute cursor-pointer right-2 top-1/2 transform -translate-y-1/2 bg-blue-500 hover:bg-blue-600 text-white rounded-md p-1.5 flex items-center justify-center transition duration-150 ease-in-out"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth="2"
                stroke="currentColor"
                className="w-5 h-5"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18"
                />
              </svg>
            </button>
          </div>
          <div className="flex flex-wrap justify-center gap-2 md:gap-3 opacity-0 animate-fade-in-up animation-delay-1000">
            {topicSamples.map((topic, id) => (
              <button
                key={id}
                onClick={handleSampleChoice}
                className="px-4 py-1.5 border border-gray-300 rounded-full text-sm text-gray-200 hover:text-gray-50 cursor-pointer transition duration-150 ease-in-out"
              >
                {topic}
              </button>
            ))}
          </div>
        </div>
      </main>
    </React.Fragment>
  );
}
